#name: Parse github form
run-name: ${{ github.actor }} - issue:${{ github.event.issue.number }}
on:
  issues:
    types:
      - opened
  workflow_dispatch:
jobs:
  parse:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Parse issue
        id: parse_issue
        uses: onmax/issue-form-parser@v1.4
        with:
          issue_number: ${{ github.event.issue.number }}
      
      - name: Show parsed payload data
        run: |
          # Using the character `'` to prevent all characters enclosed within
          # them from being treated as special characters (e.g. $ or `)
          echo '${{ steps.parse_issue.outputs.payload }}'
          echo NEW_DATA='${{ steps.parse_issue.outputs.payload }}' >> $GITHUB_ENV
          
       
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' 
      - run: |
          python file_handling.py
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b PR-${{ github.run_id }}
          git add .
          git commit -m "parseissues"
          git push --set-upstream origin PR-${{ github.run_id }}
          gh pr create -f  -t ${{ github.run_id }}
          
        env:
          #GH_TOKEN: ${{ github.token }}
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: Install jq tool
        run: |
          sudo apt-get update
          sudo apt-get install jq
          
      - name: get PR details 
        uses: octokit/request-action@v2.x
        id: get_pr_number
        with:
          route: GET /repos/mokainos/actions/pulls
          owner: octokit
          repo: request-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set env 
        run: | 
            echo PR_NUM=$(echo '${{ steps.get_pr_number.outputs.data }}' | jq -r '.[] | select(.title | contains("${{ github.run_id }}"))| .number' ) >>   $GITHUB_ENV
      - name: echo_prnum
        run: |
          echo PR_NUM ${{ env.PR_NUM }}
          
#       - name: Approve PR
#         uses: octokit/request-action@v2.x
#         with:
#           route: POST /repos/${{ github.repository }}/pulls/${{ env.PR_NUM }}/reviews
#           token: ${{ secrets.GITHUB_TOKEN }}
#           review_event: APPROVE
#           body: Auto-approved by @mokainos
          
      - name: label
        run: |
          gh pr edit ${{ env.PR_NUM }} --add-label "automerge"  --repo mokainos/actions
          #gh pr review ${{ env.PR_NUM }} --approve 
          gh pr merge ${{ env.PR_NUM }} --admin -m
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
            
            
#       - run: | # approve the pull request
#           curl --request POST \
#           --url https://api.github.com/repos/${{github.repository}}/pulls/${{ env.PR_NUM }}/reviews \
#           --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
#           --header 'content-type: application/json' \
#           -d '{"event":"APPROVE"}'  
#         env:
#           GH_TOKEN: ${{ secrets.mokainos }}
          
#       - id: automerge
#         name: automerge
#         uses: "pascalgn/automerge-action@v0.15.6"
#         env:
#           GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Close Issue
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: Auto-closing issue
